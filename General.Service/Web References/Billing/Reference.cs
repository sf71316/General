//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.18449
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 原始程式碼已由 Microsoft.VSDesigner 自動產生，版本 4.0.30319.18449。
// 
#pragma warning disable 1591

namespace General.Service.Billing {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BillingRecordManagementSoap", Namespace="http://www.microsoft.com/iptv/bss")]
    public partial class BillingRecordManagement : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ReadBillingRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBillingRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBillingRecordStatusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BillingRecordManagement() {
            this.Url = global::General.Service.Properties.Settings.Default.General_Service_Billing_BillingRecordManagement;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ReadBillingRecordCompletedEventHandler ReadBillingRecordCompleted;
        
        /// <remarks/>
        public event DeleteBillingRecordCompletedEventHandler DeleteBillingRecordCompleted;
        
        /// <remarks/>
        public event UpdateBillingRecordStatusCompletedEventHandler UpdateBillingRecordStatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/iptv/bss/ReadBillingRecord", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BillingRecord[] ReadBillingRecord(BillingRecord record, System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("ReadBillingRecord", new object[] {
                        record,
                        startDate,
                        endDate});
            return ((BillingRecord[])(results[0]));
        }
        
        /// <remarks/>
        public void ReadBillingRecordAsync(BillingRecord record, System.DateTime startDate, System.DateTime endDate) {
            this.ReadBillingRecordAsync(record, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void ReadBillingRecordAsync(BillingRecord record, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.ReadBillingRecordOperationCompleted == null)) {
                this.ReadBillingRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadBillingRecordOperationCompleted);
            }
            this.InvokeAsync("ReadBillingRecord", new object[] {
                        record,
                        startDate,
                        endDate}, this.ReadBillingRecordOperationCompleted, userState);
        }
        
        private void OnReadBillingRecordOperationCompleted(object arg) {
            if ((this.ReadBillingRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadBillingRecordCompleted(this, new ReadBillingRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/iptv/bss/DeleteBillingRecord", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteBillingRecord(BillingRecord record, System.DateTime startDate, System.DateTime endDate) {
            this.Invoke("DeleteBillingRecord", new object[] {
                        record,
                        startDate,
                        endDate});
        }
        
        /// <remarks/>
        public void DeleteBillingRecordAsync(BillingRecord record, System.DateTime startDate, System.DateTime endDate) {
            this.DeleteBillingRecordAsync(record, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void DeleteBillingRecordAsync(BillingRecord record, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.DeleteBillingRecordOperationCompleted == null)) {
                this.DeleteBillingRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBillingRecordOperationCompleted);
            }
            this.InvokeAsync("DeleteBillingRecord", new object[] {
                        record,
                        startDate,
                        endDate}, this.DeleteBillingRecordOperationCompleted, userState);
        }
        
        private void OnDeleteBillingRecordOperationCompleted(object arg) {
            if ((this.DeleteBillingRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBillingRecordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/iptv/bss/UpdateBillingRecordStatus", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateBillingRecordStatus(BillingRecord record, System.DateTime startDate, System.DateTime endDate) {
            this.Invoke("UpdateBillingRecordStatus", new object[] {
                        record,
                        startDate,
                        endDate});
        }
        
        /// <remarks/>
        public void UpdateBillingRecordStatusAsync(BillingRecord record, System.DateTime startDate, System.DateTime endDate) {
            this.UpdateBillingRecordStatusAsync(record, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void UpdateBillingRecordStatusAsync(BillingRecord record, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.UpdateBillingRecordStatusOperationCompleted == null)) {
                this.UpdateBillingRecordStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBillingRecordStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateBillingRecordStatus", new object[] {
                        record,
                        startDate,
                        endDate}, this.UpdateBillingRecordStatusOperationCompleted, userState);
        }
        
        private void OnUpdateBillingRecordStatusOperationCompleted(object arg) {
            if ((this.UpdateBillingRecordStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBillingRecordStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss")]
    public partial class BillingRecord {
        
        private string principalExternalIdField;
        
        private PrincipalType principalTypeField;
        
        private System.Guid idField;
        
        private System.Guid resourceIdField;
        
        private string resourceExternalIdField;
        
        private System.DateTime purchaseDateTimeField;
        
        private string priceField;
        
        private string externalIdField;
        
        private BillingEventStatus statusField;
        
        private string subSystemField;
        
        private System.DateTime startDateField;
        
        private System.DateTime endDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PrincipalExternalId {
            get {
                return this.principalExternalIdField;
            }
            set {
                this.principalExternalIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public PrincipalType PrincipalType {
            get {
                return this.principalTypeField;
            }
            set {
                this.principalTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid ResourceId {
            get {
                return this.resourceIdField;
            }
            set {
                this.resourceIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ResourceExternalId {
            get {
                return this.resourceExternalIdField;
            }
            set {
                this.resourceExternalIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime PurchaseDateTime {
            get {
                return this.purchaseDateTimeField;
            }
            set {
                this.purchaseDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ExternalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public BillingEventStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SubSystem {
            get {
                return this.subSystemField;
            }
            set {
                this.subSystemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss")]
    public enum PrincipalType {
        
        /// <remarks/>
        Account,
        
        /// <remarks/>
        Device,
        
        /// <remarks/>
        Group,
        
        /// <remarks/>
        User,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss")]
    public enum BillingEventStatus {
        
        /// <remarks/>
        UnRead,
        
        /// <remarks/>
        Read,
        
        /// <remarks/>
        Recorded,
        
        /// <remarks/>
        Deletable,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ReadBillingRecordCompletedEventHandler(object sender, ReadBillingRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadBillingRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadBillingRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BillingRecord[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BillingRecord[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteBillingRecordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateBillingRecordStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591