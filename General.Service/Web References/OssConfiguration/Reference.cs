//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.18034
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 原始程式碼已由 Microsoft.VSDesigner 自動產生，版本 4.0.30319.18034。
// 
#pragma warning disable 1591

namespace General.Service.OssConfiguration {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ConfigurationSoap", Namespace="http://www.microsoft.com/iptv/oss/configuration")]
    public partial class Configuration : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback NotifyClientsOfNTPChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartGroupUpgradeOperationCompleted;
        
        private System.Threading.SendOrPostCallback StopGroupUpgradeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Configuration() {
            this.Url = global::General.Service.Properties.Settings.Default.General_Service_OssConfiguration_Configuration;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event NotifyClientsOfNTPChangeCompletedEventHandler NotifyClientsOfNTPChangeCompleted;
        
        /// <remarks/>
        public event StartGroupUpgradeCompletedEventHandler StartGroupUpgradeCompleted;
        
        /// <remarks/>
        public event StopGroupUpgradeCompletedEventHandler StopGroupUpgradeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/oss/configuration/NotifyClientsOfNTPChange", RequestNamespace="http://www.microsoft.com/iptv/oss/configuration", ResponseNamespace="http://www.microsoft.com/iptv/oss/configuration", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void NotifyClientsOfNTPChange() {
            this.Invoke("NotifyClientsOfNTPChange", new object[0]);
        }
        
        /// <remarks/>
        public void NotifyClientsOfNTPChangeAsync() {
            this.NotifyClientsOfNTPChangeAsync(null);
        }
        
        /// <remarks/>
        public void NotifyClientsOfNTPChangeAsync(object userState) {
            if ((this.NotifyClientsOfNTPChangeOperationCompleted == null)) {
                this.NotifyClientsOfNTPChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyClientsOfNTPChangeOperationCompleted);
            }
            this.InvokeAsync("NotifyClientsOfNTPChange", new object[0], this.NotifyClientsOfNTPChangeOperationCompleted, userState);
        }
        
        private void OnNotifyClientsOfNTPChangeOperationCompleted(object arg) {
            if ((this.NotifyClientsOfNTPChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyClientsOfNTPChangeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/oss/configuration/StartGroupUpgrade", RequestNamespace="http://www.microsoft.com/iptv/oss/configuration", ResponseNamespace="http://www.microsoft.com/iptv/oss/configuration", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StartGroupUpgrade(ExternalId groupExternalId) {
            this.Invoke("StartGroupUpgrade", new object[] {
                        groupExternalId});
        }
        
        /// <remarks/>
        public void StartGroupUpgradeAsync(ExternalId groupExternalId) {
            this.StartGroupUpgradeAsync(groupExternalId, null);
        }
        
        /// <remarks/>
        public void StartGroupUpgradeAsync(ExternalId groupExternalId, object userState) {
            if ((this.StartGroupUpgradeOperationCompleted == null)) {
                this.StartGroupUpgradeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartGroupUpgradeOperationCompleted);
            }
            this.InvokeAsync("StartGroupUpgrade", new object[] {
                        groupExternalId}, this.StartGroupUpgradeOperationCompleted, userState);
        }
        
        private void OnStartGroupUpgradeOperationCompleted(object arg) {
            if ((this.StartGroupUpgradeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartGroupUpgradeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/oss/configuration/StopGroupUpgrade", RequestNamespace="http://www.microsoft.com/iptv/oss/configuration", ResponseNamespace="http://www.microsoft.com/iptv/oss/configuration", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StopGroupUpgrade(ExternalId groupExternalId) {
            this.Invoke("StopGroupUpgrade", new object[] {
                        groupExternalId});
        }
        
        /// <remarks/>
        public void StopGroupUpgradeAsync(ExternalId groupExternalId) {
            this.StopGroupUpgradeAsync(groupExternalId, null);
        }
        
        /// <remarks/>
        public void StopGroupUpgradeAsync(ExternalId groupExternalId, object userState) {
            if ((this.StopGroupUpgradeOperationCompleted == null)) {
                this.StopGroupUpgradeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStopGroupUpgradeOperationCompleted);
            }
            this.InvokeAsync("StopGroupUpgrade", new object[] {
                        groupExternalId}, this.StopGroupUpgradeOperationCompleted, userState);
        }
        
        private void OnStopGroupUpgradeOperationCompleted(object arg) {
            if ((this.StopGroupUpgradeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StopGroupUpgradeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StringExternalId))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GroupExternalId))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/oss/configuration")]
    public abstract partial class ExternalId {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GroupExternalId))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/oss/configuration")]
    public partial class StringExternalId : ExternalId {
        
        private string idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/oss/configuration")]
    public partial class GroupExternalId : StringExternalId {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NotifyClientsOfNTPChangeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void StartGroupUpgradeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void StopGroupUpgradeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591