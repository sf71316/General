//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.18046
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 原始程式碼已由 Microsoft.VSDesigner 自動產生，版本 4.0.30319.18046。
// 
#pragma warning disable 1591

namespace General.Service.OssChannel {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ChannelManagementSoap", Namespace="Microsoft.TV2.Oss.Channel")]
    public partial class ChannelManagement : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateChannelMapOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateChannelMap2OperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateMediaDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateMediaDescription2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDefaultChannelMapOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteChannelMapOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMediaDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListingsChannelsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListingsChannels2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLiveCallLettersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLiveCallLetters2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCallLettersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCallLetters2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPPVCallLettersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPPVCallLetters2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChannelMapsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChannelsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChannels2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMediaDescriptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMediaDescriptions2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNonPPVMediaDescriptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNonPPVMediaDescriptions2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPPVMediaDescriptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPPVMediaDescriptions2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediaDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediaDescription2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback LookupMediaDescReferencesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateChannelMapOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateChannelMap2OperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMediaDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMediaDescription2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubsGrpChannelMapsOperationCompleted;
        
        private System.Threading.SendOrPostCallback MapSubsGroupToChannelMapOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetGlobalSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGlobalSettingOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ChannelManagement() {
            this.Url = global::General.Service.Properties.Settings.Default.General_Service_OssChannel_ChannelManagement;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateChannelMapCompletedEventHandler CreateChannelMapCompleted;
        
        /// <remarks/>
        public event CreateChannelMap2CompletedEventHandler CreateChannelMap2Completed;
        
        /// <remarks/>
        public event CreateMediaDescriptionCompletedEventHandler CreateMediaDescriptionCompleted;
        
        /// <remarks/>
        public event CreateMediaDescription2CompletedEventHandler CreateMediaDescription2Completed;
        
        /// <remarks/>
        public event SetDefaultChannelMapCompletedEventHandler SetDefaultChannelMapCompleted;
        
        /// <remarks/>
        public event DeleteChannelMapCompletedEventHandler DeleteChannelMapCompleted;
        
        /// <remarks/>
        public event DeleteMediaDescriptionCompletedEventHandler DeleteMediaDescriptionCompleted;
        
        /// <remarks/>
        public event GetListingsChannelsCompletedEventHandler GetListingsChannelsCompleted;
        
        /// <remarks/>
        public event GetListingsChannels2CompletedEventHandler GetListingsChannels2Completed;
        
        /// <remarks/>
        public event GetLiveCallLettersCompletedEventHandler GetLiveCallLettersCompleted;
        
        /// <remarks/>
        public event GetLiveCallLetters2CompletedEventHandler GetLiveCallLetters2Completed;
        
        /// <remarks/>
        public event GetCallLettersCompletedEventHandler GetCallLettersCompleted;
        
        /// <remarks/>
        public event GetCallLetters2CompletedEventHandler GetCallLetters2Completed;
        
        /// <remarks/>
        public event GetPPVCallLettersCompletedEventHandler GetPPVCallLettersCompleted;
        
        /// <remarks/>
        public event GetPPVCallLetters2CompletedEventHandler GetPPVCallLetters2Completed;
        
        /// <remarks/>
        public event GetChannelMapsCompletedEventHandler GetChannelMapsCompleted;
        
        /// <remarks/>
        public event GetChannelsCompletedEventHandler GetChannelsCompleted;
        
        /// <remarks/>
        public event GetChannels2CompletedEventHandler GetChannels2Completed;
        
        /// <remarks/>
        public event GetAllMediaDescriptionsCompletedEventHandler GetAllMediaDescriptionsCompleted;
        
        /// <remarks/>
        public event GetAllMediaDescriptions2CompletedEventHandler GetAllMediaDescriptions2Completed;
        
        /// <remarks/>
        public event GetNonPPVMediaDescriptionsCompletedEventHandler GetNonPPVMediaDescriptionsCompleted;
        
        /// <remarks/>
        public event GetNonPPVMediaDescriptions2CompletedEventHandler GetNonPPVMediaDescriptions2Completed;
        
        /// <remarks/>
        public event GetPPVMediaDescriptionsCompletedEventHandler GetPPVMediaDescriptionsCompleted;
        
        /// <remarks/>
        public event GetPPVMediaDescriptions2CompletedEventHandler GetPPVMediaDescriptions2Completed;
        
        /// <remarks/>
        public event GetMediaDescriptionCompletedEventHandler GetMediaDescriptionCompleted;
        
        /// <remarks/>
        public event GetMediaDescription2CompletedEventHandler GetMediaDescription2Completed;
        
        /// <remarks/>
        public event GetServicesCompletedEventHandler GetServicesCompleted;
        
        /// <remarks/>
        public event GetServiceCompletedEventHandler GetServiceCompleted;
        
        /// <remarks/>
        public event LookupMediaDescReferencesCompletedEventHandler LookupMediaDescReferencesCompleted;
        
        /// <remarks/>
        public event UpdateChannelMapCompletedEventHandler UpdateChannelMapCompleted;
        
        /// <remarks/>
        public event UpdateChannelMap2CompletedEventHandler UpdateChannelMap2Completed;
        
        /// <remarks/>
        public event UpdateMediaDescriptionCompletedEventHandler UpdateMediaDescriptionCompleted;
        
        /// <remarks/>
        public event UpdateMediaDescription2CompletedEventHandler UpdateMediaDescription2Completed;
        
        /// <remarks/>
        public event GetSubsGrpChannelMapsCompletedEventHandler GetSubsGrpChannelMapsCompleted;
        
        /// <remarks/>
        public event MapSubsGroupToChannelMapCompletedEventHandler MapSubsGroupToChannelMapCompleted;
        
        /// <remarks/>
        public event SetGlobalSettingCompletedEventHandler SetGlobalSettingCompleted;
        
        /// <remarks/>
        public event GetGlobalSettingCompletedEventHandler GetGlobalSettingCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/CreateChannelMap", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateChannelMap(string channelMapName, ChannelMapItem[] channels, bool isDefault) {
            this.Invoke("CreateChannelMap", new object[] {
                        channelMapName,
                        channels,
                        isDefault});
        }
        
        /// <remarks/>
        public void CreateChannelMapAsync(string channelMapName, ChannelMapItem[] channels, bool isDefault) {
            this.CreateChannelMapAsync(channelMapName, channels, isDefault, null);
        }
        
        /// <remarks/>
        public void CreateChannelMapAsync(string channelMapName, ChannelMapItem[] channels, bool isDefault, object userState) {
            if ((this.CreateChannelMapOperationCompleted == null)) {
                this.CreateChannelMapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateChannelMapOperationCompleted);
            }
            this.InvokeAsync("CreateChannelMap", new object[] {
                        channelMapName,
                        channels,
                        isDefault}, this.CreateChannelMapOperationCompleted, userState);
        }
        
        private void OnCreateChannelMapOperationCompleted(object arg) {
            if ((this.CreateChannelMapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateChannelMapCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/CreateChannelMap2", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateChannelMap2(string channelMapName, ChannelMapItem2[] channels, bool isDefault) {
            this.Invoke("CreateChannelMap2", new object[] {
                        channelMapName,
                        channels,
                        isDefault});
        }
        
        /// <remarks/>
        public void CreateChannelMap2Async(string channelMapName, ChannelMapItem2[] channels, bool isDefault) {
            this.CreateChannelMap2Async(channelMapName, channels, isDefault, null);
        }
        
        /// <remarks/>
        public void CreateChannelMap2Async(string channelMapName, ChannelMapItem2[] channels, bool isDefault, object userState) {
            if ((this.CreateChannelMap2OperationCompleted == null)) {
                this.CreateChannelMap2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateChannelMap2OperationCompleted);
            }
            this.InvokeAsync("CreateChannelMap2", new object[] {
                        channelMapName,
                        channels,
                        isDefault}, this.CreateChannelMap2OperationCompleted, userState);
        }
        
        private void OnCreateChannelMap2OperationCompleted(object arg) {
            if ((this.CreateChannelMap2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateChannelMap2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/CreateMediaDescription", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateMediaDescription(MediaDescriptionItem mediaDescItem) {
            this.Invoke("CreateMediaDescription", new object[] {
                        mediaDescItem});
        }
        
        /// <remarks/>
        public void CreateMediaDescriptionAsync(MediaDescriptionItem mediaDescItem) {
            this.CreateMediaDescriptionAsync(mediaDescItem, null);
        }
        
        /// <remarks/>
        public void CreateMediaDescriptionAsync(MediaDescriptionItem mediaDescItem, object userState) {
            if ((this.CreateMediaDescriptionOperationCompleted == null)) {
                this.CreateMediaDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateMediaDescriptionOperationCompleted);
            }
            this.InvokeAsync("CreateMediaDescription", new object[] {
                        mediaDescItem}, this.CreateMediaDescriptionOperationCompleted, userState);
        }
        
        private void OnCreateMediaDescriptionOperationCompleted(object arg) {
            if ((this.CreateMediaDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateMediaDescriptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/CreateMediaDescription2", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateMediaDescription2(MediaDescriptionItem2 mediaDescItem) {
            this.Invoke("CreateMediaDescription2", new object[] {
                        mediaDescItem});
        }
        
        /// <remarks/>
        public void CreateMediaDescription2Async(MediaDescriptionItem2 mediaDescItem) {
            this.CreateMediaDescription2Async(mediaDescItem, null);
        }
        
        /// <remarks/>
        public void CreateMediaDescription2Async(MediaDescriptionItem2 mediaDescItem, object userState) {
            if ((this.CreateMediaDescription2OperationCompleted == null)) {
                this.CreateMediaDescription2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateMediaDescription2OperationCompleted);
            }
            this.InvokeAsync("CreateMediaDescription2", new object[] {
                        mediaDescItem}, this.CreateMediaDescription2OperationCompleted, userState);
        }
        
        private void OnCreateMediaDescription2OperationCompleted(object arg) {
            if ((this.CreateMediaDescription2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateMediaDescription2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/SetDefaultChannelMap", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetDefaultChannelMap(string channelMapName) {
            this.Invoke("SetDefaultChannelMap", new object[] {
                        channelMapName});
        }
        
        /// <remarks/>
        public void SetDefaultChannelMapAsync(string channelMapName) {
            this.SetDefaultChannelMapAsync(channelMapName, null);
        }
        
        /// <remarks/>
        public void SetDefaultChannelMapAsync(string channelMapName, object userState) {
            if ((this.SetDefaultChannelMapOperationCompleted == null)) {
                this.SetDefaultChannelMapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDefaultChannelMapOperationCompleted);
            }
            this.InvokeAsync("SetDefaultChannelMap", new object[] {
                        channelMapName}, this.SetDefaultChannelMapOperationCompleted, userState);
        }
        
        private void OnSetDefaultChannelMapOperationCompleted(object arg) {
            if ((this.SetDefaultChannelMapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDefaultChannelMapCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/DeleteChannelMap", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteChannelMap(string channelMapName) {
            this.Invoke("DeleteChannelMap", new object[] {
                        channelMapName});
        }
        
        /// <remarks/>
        public void DeleteChannelMapAsync(string channelMapName) {
            this.DeleteChannelMapAsync(channelMapName, null);
        }
        
        /// <remarks/>
        public void DeleteChannelMapAsync(string channelMapName, object userState) {
            if ((this.DeleteChannelMapOperationCompleted == null)) {
                this.DeleteChannelMapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteChannelMapOperationCompleted);
            }
            this.InvokeAsync("DeleteChannelMap", new object[] {
                        channelMapName}, this.DeleteChannelMapOperationCompleted, userState);
        }
        
        private void OnDeleteChannelMapOperationCompleted(object arg) {
            if ((this.DeleteChannelMapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteChannelMapCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/DeleteMediaDescription", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteMediaDescription(string mediaDescId) {
            this.Invoke("DeleteMediaDescription", new object[] {
                        mediaDescId});
        }
        
        /// <remarks/>
        public void DeleteMediaDescriptionAsync(string mediaDescId) {
            this.DeleteMediaDescriptionAsync(mediaDescId, null);
        }
        
        /// <remarks/>
        public void DeleteMediaDescriptionAsync(string mediaDescId, object userState) {
            if ((this.DeleteMediaDescriptionOperationCompleted == null)) {
                this.DeleteMediaDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMediaDescriptionOperationCompleted);
            }
            this.InvokeAsync("DeleteMediaDescription", new object[] {
                        mediaDescId}, this.DeleteMediaDescriptionOperationCompleted, userState);
        }
        
        private void OnDeleteMediaDescriptionOperationCompleted(object arg) {
            if ((this.DeleteMediaDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMediaDescriptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/GetListingsChannels", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ListingsChannelItem[] GetListingsChannels() {
            object[] results = this.Invoke("GetListingsChannels", new object[0]);
            return ((ListingsChannelItem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetListingsChannelsAsync() {
            this.GetListingsChannelsAsync(null);
        }
        
        /// <remarks/>
        public void GetListingsChannelsAsync(object userState) {
            if ((this.GetListingsChannelsOperationCompleted == null)) {
                this.GetListingsChannelsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListingsChannelsOperationCompleted);
            }
            this.InvokeAsync("GetListingsChannels", new object[0], this.GetListingsChannelsOperationCompleted, userState);
        }
        
        private void OnGetListingsChannelsOperationCompleted(object arg) {
            if ((this.GetListingsChannelsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListingsChannelsCompleted(this, new GetListingsChannelsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/GetListingsChannels2", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ListingsChannelItem2[] GetListingsChannels2() {
            object[] results = this.Invoke("GetListingsChannels2", new object[0]);
            return ((ListingsChannelItem2[])(results[0]));
        }
        
        /// <remarks/>
        public void GetListingsChannels2Async() {
            this.GetListingsChannels2Async(null);
        }
        
        /// <remarks/>
        public void GetListingsChannels2Async(object userState) {
            if ((this.GetListingsChannels2OperationCompleted == null)) {
                this.GetListingsChannels2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListingsChannels2OperationCompleted);
            }
            this.InvokeAsync("GetListingsChannels2", new object[0], this.GetListingsChannels2OperationCompleted, userState);
        }
        
        private void OnGetListingsChannels2OperationCompleted(object arg) {
            if ((this.GetListingsChannels2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListingsChannels2Completed(this, new GetListingsChannels2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/GetLiveCallLetters", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CallLetterItem[] GetLiveCallLetters() {
            object[] results = this.Invoke("GetLiveCallLetters", new object[0]);
            return ((CallLetterItem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLiveCallLettersAsync() {
            this.GetLiveCallLettersAsync(null);
        }
        
        /// <remarks/>
        public void GetLiveCallLettersAsync(object userState) {
            if ((this.GetLiveCallLettersOperationCompleted == null)) {
                this.GetLiveCallLettersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLiveCallLettersOperationCompleted);
            }
            this.InvokeAsync("GetLiveCallLetters", new object[0], this.GetLiveCallLettersOperationCompleted, userState);
        }
        
        private void OnGetLiveCallLettersOperationCompleted(object arg) {
            if ((this.GetLiveCallLettersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLiveCallLettersCompleted(this, new GetLiveCallLettersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/GetLiveCallLetters2", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CallLetterItem2[] GetLiveCallLetters2() {
            object[] results = this.Invoke("GetLiveCallLetters2", new object[0]);
            return ((CallLetterItem2[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLiveCallLetters2Async() {
            this.GetLiveCallLetters2Async(null);
        }
        
        /// <remarks/>
        public void GetLiveCallLetters2Async(object userState) {
            if ((this.GetLiveCallLetters2OperationCompleted == null)) {
                this.GetLiveCallLetters2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLiveCallLetters2OperationCompleted);
            }
            this.InvokeAsync("GetLiveCallLetters2", new object[0], this.GetLiveCallLetters2OperationCompleted, userState);
        }
        
        private void OnGetLiveCallLetters2OperationCompleted(object arg) {
            if ((this.GetLiveCallLetters2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLiveCallLetters2Completed(this, new GetLiveCallLetters2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/GetCallLetters", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CallLetterItem[] GetCallLetters() {
            object[] results = this.Invoke("GetCallLetters", new object[0]);
            return ((CallLetterItem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCallLettersAsync() {
            this.GetCallLettersAsync(null);
        }
        
        /// <remarks/>
        public void GetCallLettersAsync(object userState) {
            if ((this.GetCallLettersOperationCompleted == null)) {
                this.GetCallLettersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCallLettersOperationCompleted);
            }
            this.InvokeAsync("GetCallLetters", new object[0], this.GetCallLettersOperationCompleted, userState);
        }
        
        private void OnGetCallLettersOperationCompleted(object arg) {
            if ((this.GetCallLettersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCallLettersCompleted(this, new GetCallLettersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/GetCallLetters2", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CallLetterItem2[] GetCallLetters2() {
            object[] results = this.Invoke("GetCallLetters2", new object[0]);
            return ((CallLetterItem2[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCallLetters2Async() {
            this.GetCallLetters2Async(null);
        }
        
        /// <remarks/>
        public void GetCallLetters2Async(object userState) {
            if ((this.GetCallLetters2OperationCompleted == null)) {
                this.GetCallLetters2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCallLetters2OperationCompleted);
            }
            this.InvokeAsync("GetCallLetters2", new object[0], this.GetCallLetters2OperationCompleted, userState);
        }
        
        private void OnGetCallLetters2OperationCompleted(object arg) {
            if ((this.GetCallLetters2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCallLetters2Completed(this, new GetCallLetters2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/GetPPVCallLetters", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CallLetterItem[] GetPPVCallLetters() {
            object[] results = this.Invoke("GetPPVCallLetters", new object[0]);
            return ((CallLetterItem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPPVCallLettersAsync() {
            this.GetPPVCallLettersAsync(null);
        }
        
        /// <remarks/>
        public void GetPPVCallLettersAsync(object userState) {
            if ((this.GetPPVCallLettersOperationCompleted == null)) {
                this.GetPPVCallLettersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPPVCallLettersOperationCompleted);
            }
            this.InvokeAsync("GetPPVCallLetters", new object[0], this.GetPPVCallLettersOperationCompleted, userState);
        }
        
        private void OnGetPPVCallLettersOperationCompleted(object arg) {
            if ((this.GetPPVCallLettersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPPVCallLettersCompleted(this, new GetPPVCallLettersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/GetPPVCallLetters2", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CallLetterItem2[] GetPPVCallLetters2() {
            object[] results = this.Invoke("GetPPVCallLetters2", new object[0]);
            return ((CallLetterItem2[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPPVCallLetters2Async() {
            this.GetPPVCallLetters2Async(null);
        }
        
        /// <remarks/>
        public void GetPPVCallLetters2Async(object userState) {
            if ((this.GetPPVCallLetters2OperationCompleted == null)) {
                this.GetPPVCallLetters2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPPVCallLetters2OperationCompleted);
            }
            this.InvokeAsync("GetPPVCallLetters2", new object[0], this.GetPPVCallLetters2OperationCompleted, userState);
        }
        
        private void OnGetPPVCallLetters2OperationCompleted(object arg) {
            if ((this.GetPPVCallLetters2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPPVCallLetters2Completed(this, new GetPPVCallLetters2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/GetChannelMaps", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetChannelMaps() {
            object[] results = this.Invoke("GetChannelMaps", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChannelMapsAsync() {
            this.GetChannelMapsAsync(null);
        }
        
        /// <remarks/>
        public void GetChannelMapsAsync(object userState) {
            if ((this.GetChannelMapsOperationCompleted == null)) {
                this.GetChannelMapsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChannelMapsOperationCompleted);
            }
            this.InvokeAsync("GetChannelMaps", new object[0], this.GetChannelMapsOperationCompleted, userState);
        }
        
        private void OnGetChannelMapsOperationCompleted(object arg) {
            if ((this.GetChannelMapsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChannelMapsCompleted(this, new GetChannelMapsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/GetChannels", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ChannelMapItem[] GetChannels(string channelMapName, out bool isDefault) {
            object[] results = this.Invoke("GetChannels", new object[] {
                        channelMapName});
            isDefault = ((bool)(results[1]));
            return ((ChannelMapItem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChannelsAsync(string channelMapName) {
            this.GetChannelsAsync(channelMapName, null);
        }
        
        /// <remarks/>
        public void GetChannelsAsync(string channelMapName, object userState) {
            if ((this.GetChannelsOperationCompleted == null)) {
                this.GetChannelsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChannelsOperationCompleted);
            }
            this.InvokeAsync("GetChannels", new object[] {
                        channelMapName}, this.GetChannelsOperationCompleted, userState);
        }
        
        private void OnGetChannelsOperationCompleted(object arg) {
            if ((this.GetChannelsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChannelsCompleted(this, new GetChannelsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/GetChannels2", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ChannelMapItem2[] GetChannels2(string channelMapName, out bool isDefault) {
            object[] results = this.Invoke("GetChannels2", new object[] {
                        channelMapName});
            isDefault = ((bool)(results[1]));
            return ((ChannelMapItem2[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChannels2Async(string channelMapName) {
            this.GetChannels2Async(channelMapName, null);
        }
        
        /// <remarks/>
        public void GetChannels2Async(string channelMapName, object userState) {
            if ((this.GetChannels2OperationCompleted == null)) {
                this.GetChannels2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChannels2OperationCompleted);
            }
            this.InvokeAsync("GetChannels2", new object[] {
                        channelMapName}, this.GetChannels2OperationCompleted, userState);
        }
        
        private void OnGetChannels2OperationCompleted(object arg) {
            if ((this.GetChannels2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChannels2Completed(this, new GetChannels2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/GetAllMediaDescriptions", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MediaDescriptionItem[] GetAllMediaDescriptions() {
            object[] results = this.Invoke("GetAllMediaDescriptions", new object[0]);
            return ((MediaDescriptionItem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMediaDescriptionsAsync() {
            this.GetAllMediaDescriptionsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllMediaDescriptionsAsync(object userState) {
            if ((this.GetAllMediaDescriptionsOperationCompleted == null)) {
                this.GetAllMediaDescriptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMediaDescriptionsOperationCompleted);
            }
            this.InvokeAsync("GetAllMediaDescriptions", new object[0], this.GetAllMediaDescriptionsOperationCompleted, userState);
        }
        
        private void OnGetAllMediaDescriptionsOperationCompleted(object arg) {
            if ((this.GetAllMediaDescriptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMediaDescriptionsCompleted(this, new GetAllMediaDescriptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/GetAllMediaDescriptions2", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MediaDescriptionItem2[] GetAllMediaDescriptions2() {
            object[] results = this.Invoke("GetAllMediaDescriptions2", new object[0]);
            return ((MediaDescriptionItem2[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMediaDescriptions2Async() {
            this.GetAllMediaDescriptions2Async(null);
        }
        
        /// <remarks/>
        public void GetAllMediaDescriptions2Async(object userState) {
            if ((this.GetAllMediaDescriptions2OperationCompleted == null)) {
                this.GetAllMediaDescriptions2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMediaDescriptions2OperationCompleted);
            }
            this.InvokeAsync("GetAllMediaDescriptions2", new object[0], this.GetAllMediaDescriptions2OperationCompleted, userState);
        }
        
        private void OnGetAllMediaDescriptions2OperationCompleted(object arg) {
            if ((this.GetAllMediaDescriptions2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMediaDescriptions2Completed(this, new GetAllMediaDescriptions2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/GetNonPPVMediaDescriptions", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MediaDescriptionItem[] GetNonPPVMediaDescriptions() {
            object[] results = this.Invoke("GetNonPPVMediaDescriptions", new object[0]);
            return ((MediaDescriptionItem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNonPPVMediaDescriptionsAsync() {
            this.GetNonPPVMediaDescriptionsAsync(null);
        }
        
        /// <remarks/>
        public void GetNonPPVMediaDescriptionsAsync(object userState) {
            if ((this.GetNonPPVMediaDescriptionsOperationCompleted == null)) {
                this.GetNonPPVMediaDescriptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNonPPVMediaDescriptionsOperationCompleted);
            }
            this.InvokeAsync("GetNonPPVMediaDescriptions", new object[0], this.GetNonPPVMediaDescriptionsOperationCompleted, userState);
        }
        
        private void OnGetNonPPVMediaDescriptionsOperationCompleted(object arg) {
            if ((this.GetNonPPVMediaDescriptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNonPPVMediaDescriptionsCompleted(this, new GetNonPPVMediaDescriptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/GetNonPPVMediaDescriptions2", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MediaDescriptionItem2[] GetNonPPVMediaDescriptions2() {
            object[] results = this.Invoke("GetNonPPVMediaDescriptions2", new object[0]);
            return ((MediaDescriptionItem2[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNonPPVMediaDescriptions2Async() {
            this.GetNonPPVMediaDescriptions2Async(null);
        }
        
        /// <remarks/>
        public void GetNonPPVMediaDescriptions2Async(object userState) {
            if ((this.GetNonPPVMediaDescriptions2OperationCompleted == null)) {
                this.GetNonPPVMediaDescriptions2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNonPPVMediaDescriptions2OperationCompleted);
            }
            this.InvokeAsync("GetNonPPVMediaDescriptions2", new object[0], this.GetNonPPVMediaDescriptions2OperationCompleted, userState);
        }
        
        private void OnGetNonPPVMediaDescriptions2OperationCompleted(object arg) {
            if ((this.GetNonPPVMediaDescriptions2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNonPPVMediaDescriptions2Completed(this, new GetNonPPVMediaDescriptions2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/GetPPVMediaDescriptions", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MediaDescriptionItem[] GetPPVMediaDescriptions() {
            object[] results = this.Invoke("GetPPVMediaDescriptions", new object[0]);
            return ((MediaDescriptionItem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPPVMediaDescriptionsAsync() {
            this.GetPPVMediaDescriptionsAsync(null);
        }
        
        /// <remarks/>
        public void GetPPVMediaDescriptionsAsync(object userState) {
            if ((this.GetPPVMediaDescriptionsOperationCompleted == null)) {
                this.GetPPVMediaDescriptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPPVMediaDescriptionsOperationCompleted);
            }
            this.InvokeAsync("GetPPVMediaDescriptions", new object[0], this.GetPPVMediaDescriptionsOperationCompleted, userState);
        }
        
        private void OnGetPPVMediaDescriptionsOperationCompleted(object arg) {
            if ((this.GetPPVMediaDescriptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPPVMediaDescriptionsCompleted(this, new GetPPVMediaDescriptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/GetPPVMediaDescriptions2", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MediaDescriptionItem2[] GetPPVMediaDescriptions2() {
            object[] results = this.Invoke("GetPPVMediaDescriptions2", new object[0]);
            return ((MediaDescriptionItem2[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPPVMediaDescriptions2Async() {
            this.GetPPVMediaDescriptions2Async(null);
        }
        
        /// <remarks/>
        public void GetPPVMediaDescriptions2Async(object userState) {
            if ((this.GetPPVMediaDescriptions2OperationCompleted == null)) {
                this.GetPPVMediaDescriptions2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPPVMediaDescriptions2OperationCompleted);
            }
            this.InvokeAsync("GetPPVMediaDescriptions2", new object[0], this.GetPPVMediaDescriptions2OperationCompleted, userState);
        }
        
        private void OnGetPPVMediaDescriptions2OperationCompleted(object arg) {
            if ((this.GetPPVMediaDescriptions2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPPVMediaDescriptions2Completed(this, new GetPPVMediaDescriptions2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/GetMediaDescription", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MediaDescriptionItem GetMediaDescription(string mediaDescId) {
            object[] results = this.Invoke("GetMediaDescription", new object[] {
                        mediaDescId});
            return ((MediaDescriptionItem)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediaDescriptionAsync(string mediaDescId) {
            this.GetMediaDescriptionAsync(mediaDescId, null);
        }
        
        /// <remarks/>
        public void GetMediaDescriptionAsync(string mediaDescId, object userState) {
            if ((this.GetMediaDescriptionOperationCompleted == null)) {
                this.GetMediaDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediaDescriptionOperationCompleted);
            }
            this.InvokeAsync("GetMediaDescription", new object[] {
                        mediaDescId}, this.GetMediaDescriptionOperationCompleted, userState);
        }
        
        private void OnGetMediaDescriptionOperationCompleted(object arg) {
            if ((this.GetMediaDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediaDescriptionCompleted(this, new GetMediaDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/GetMediaDescription2", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MediaDescriptionItem2 GetMediaDescription2(string mediaDescId) {
            object[] results = this.Invoke("GetMediaDescription2", new object[] {
                        mediaDescId});
            return ((MediaDescriptionItem2)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediaDescription2Async(string mediaDescId) {
            this.GetMediaDescription2Async(mediaDescId, null);
        }
        
        /// <remarks/>
        public void GetMediaDescription2Async(string mediaDescId, object userState) {
            if ((this.GetMediaDescription2OperationCompleted == null)) {
                this.GetMediaDescription2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediaDescription2OperationCompleted);
            }
            this.InvokeAsync("GetMediaDescription2", new object[] {
                        mediaDescId}, this.GetMediaDescription2OperationCompleted, userState);
        }
        
        private void OnGetMediaDescription2OperationCompleted(object arg) {
            if ((this.GetMediaDescription2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediaDescription2Completed(this, new GetMediaDescription2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/GetServices", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceData GetServices() {
            object[] results = this.Invoke("GetServices", new object[0]);
            return ((ServiceData)(results[0]));
        }
        
        /// <remarks/>
        public void GetServicesAsync() {
            this.GetServicesAsync(null);
        }
        
        /// <remarks/>
        public void GetServicesAsync(object userState) {
            if ((this.GetServicesOperationCompleted == null)) {
                this.GetServicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServicesOperationCompleted);
            }
            this.InvokeAsync("GetServices", new object[0], this.GetServicesOperationCompleted, userState);
        }
        
        private void OnGetServicesOperationCompleted(object arg) {
            if ((this.GetServicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServicesCompleted(this, new GetServicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/GetService", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceItem GetService(string serviceId) {
            object[] results = this.Invoke("GetService", new object[] {
                        serviceId});
            return ((ServiceItem)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceAsync(string serviceId) {
            this.GetServiceAsync(serviceId, null);
        }
        
        /// <remarks/>
        public void GetServiceAsync(string serviceId, object userState) {
            if ((this.GetServiceOperationCompleted == null)) {
                this.GetServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceOperationCompleted);
            }
            this.InvokeAsync("GetService", new object[] {
                        serviceId}, this.GetServiceOperationCompleted, userState);
        }
        
        private void OnGetServiceOperationCompleted(object arg) {
            if ((this.GetServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceCompleted(this, new GetServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/LookupMediaDescReferences", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] LookupMediaDescReferences(string mediaDescId) {
            object[] results = this.Invoke("LookupMediaDescReferences", new object[] {
                        mediaDescId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void LookupMediaDescReferencesAsync(string mediaDescId) {
            this.LookupMediaDescReferencesAsync(mediaDescId, null);
        }
        
        /// <remarks/>
        public void LookupMediaDescReferencesAsync(string mediaDescId, object userState) {
            if ((this.LookupMediaDescReferencesOperationCompleted == null)) {
                this.LookupMediaDescReferencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLookupMediaDescReferencesOperationCompleted);
            }
            this.InvokeAsync("LookupMediaDescReferences", new object[] {
                        mediaDescId}, this.LookupMediaDescReferencesOperationCompleted, userState);
        }
        
        private void OnLookupMediaDescReferencesOperationCompleted(object arg) {
            if ((this.LookupMediaDescReferencesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LookupMediaDescReferencesCompleted(this, new LookupMediaDescReferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/UpdateChannelMap", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateChannelMap(string channelMapName, ChannelMapItem[] channels, bool isDefault, string newChannelMapName) {
            this.Invoke("UpdateChannelMap", new object[] {
                        channelMapName,
                        channels,
                        isDefault,
                        newChannelMapName});
        }
        
        /// <remarks/>
        public void UpdateChannelMapAsync(string channelMapName, ChannelMapItem[] channels, bool isDefault, string newChannelMapName) {
            this.UpdateChannelMapAsync(channelMapName, channels, isDefault, newChannelMapName, null);
        }
        
        /// <remarks/>
        public void UpdateChannelMapAsync(string channelMapName, ChannelMapItem[] channels, bool isDefault, string newChannelMapName, object userState) {
            if ((this.UpdateChannelMapOperationCompleted == null)) {
                this.UpdateChannelMapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateChannelMapOperationCompleted);
            }
            this.InvokeAsync("UpdateChannelMap", new object[] {
                        channelMapName,
                        channels,
                        isDefault,
                        newChannelMapName}, this.UpdateChannelMapOperationCompleted, userState);
        }
        
        private void OnUpdateChannelMapOperationCompleted(object arg) {
            if ((this.UpdateChannelMapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateChannelMapCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/UpdateChannelMap2", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateChannelMap2(string channelMapName, ChannelMapItem2[] channels, bool isDefault, string newChannelMapName) {
            this.Invoke("UpdateChannelMap2", new object[] {
                        channelMapName,
                        channels,
                        isDefault,
                        newChannelMapName});
        }
        
        /// <remarks/>
        public void UpdateChannelMap2Async(string channelMapName, ChannelMapItem2[] channels, bool isDefault, string newChannelMapName) {
            this.UpdateChannelMap2Async(channelMapName, channels, isDefault, newChannelMapName, null);
        }
        
        /// <remarks/>
        public void UpdateChannelMap2Async(string channelMapName, ChannelMapItem2[] channels, bool isDefault, string newChannelMapName, object userState) {
            if ((this.UpdateChannelMap2OperationCompleted == null)) {
                this.UpdateChannelMap2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateChannelMap2OperationCompleted);
            }
            this.InvokeAsync("UpdateChannelMap2", new object[] {
                        channelMapName,
                        channels,
                        isDefault,
                        newChannelMapName}, this.UpdateChannelMap2OperationCompleted, userState);
        }
        
        private void OnUpdateChannelMap2OperationCompleted(object arg) {
            if ((this.UpdateChannelMap2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateChannelMap2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/UpdateMediaDescription", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateMediaDescription(MediaDescriptionItem mediaDescItem) {
            this.Invoke("UpdateMediaDescription", new object[] {
                        mediaDescItem});
        }
        
        /// <remarks/>
        public void UpdateMediaDescriptionAsync(MediaDescriptionItem mediaDescItem) {
            this.UpdateMediaDescriptionAsync(mediaDescItem, null);
        }
        
        /// <remarks/>
        public void UpdateMediaDescriptionAsync(MediaDescriptionItem mediaDescItem, object userState) {
            if ((this.UpdateMediaDescriptionOperationCompleted == null)) {
                this.UpdateMediaDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMediaDescriptionOperationCompleted);
            }
            this.InvokeAsync("UpdateMediaDescription", new object[] {
                        mediaDescItem}, this.UpdateMediaDescriptionOperationCompleted, userState);
        }
        
        private void OnUpdateMediaDescriptionOperationCompleted(object arg) {
            if ((this.UpdateMediaDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMediaDescriptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/UpdateMediaDescription2", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateMediaDescription2(MediaDescriptionItem2 mediaDescItem) {
            this.Invoke("UpdateMediaDescription2", new object[] {
                        mediaDescItem});
        }
        
        /// <remarks/>
        public void UpdateMediaDescription2Async(MediaDescriptionItem2 mediaDescItem) {
            this.UpdateMediaDescription2Async(mediaDescItem, null);
        }
        
        /// <remarks/>
        public void UpdateMediaDescription2Async(MediaDescriptionItem2 mediaDescItem, object userState) {
            if ((this.UpdateMediaDescription2OperationCompleted == null)) {
                this.UpdateMediaDescription2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMediaDescription2OperationCompleted);
            }
            this.InvokeAsync("UpdateMediaDescription2", new object[] {
                        mediaDescItem}, this.UpdateMediaDescription2OperationCompleted, userState);
        }
        
        private void OnUpdateMediaDescription2OperationCompleted(object arg) {
            if ((this.UpdateMediaDescription2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMediaDescription2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/GetSubsGrpChannelMaps", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SubsGroupChannelMapItem[] GetSubsGrpChannelMaps() {
            object[] results = this.Invoke("GetSubsGrpChannelMaps", new object[0]);
            return ((SubsGroupChannelMapItem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSubsGrpChannelMapsAsync() {
            this.GetSubsGrpChannelMapsAsync(null);
        }
        
        /// <remarks/>
        public void GetSubsGrpChannelMapsAsync(object userState) {
            if ((this.GetSubsGrpChannelMapsOperationCompleted == null)) {
                this.GetSubsGrpChannelMapsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubsGrpChannelMapsOperationCompleted);
            }
            this.InvokeAsync("GetSubsGrpChannelMaps", new object[0], this.GetSubsGrpChannelMapsOperationCompleted, userState);
        }
        
        private void OnGetSubsGrpChannelMapsOperationCompleted(object arg) {
            if ((this.GetSubsGrpChannelMapsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubsGrpChannelMapsCompleted(this, new GetSubsGrpChannelMapsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/MapSubsGroupToChannelMap", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MapSubsGroupToChannelMap(string GroupId, string chMapName) {
            this.Invoke("MapSubsGroupToChannelMap", new object[] {
                        GroupId,
                        chMapName});
        }
        
        /// <remarks/>
        public void MapSubsGroupToChannelMapAsync(string GroupId, string chMapName) {
            this.MapSubsGroupToChannelMapAsync(GroupId, chMapName, null);
        }
        
        /// <remarks/>
        public void MapSubsGroupToChannelMapAsync(string GroupId, string chMapName, object userState) {
            if ((this.MapSubsGroupToChannelMapOperationCompleted == null)) {
                this.MapSubsGroupToChannelMapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMapSubsGroupToChannelMapOperationCompleted);
            }
            this.InvokeAsync("MapSubsGroupToChannelMap", new object[] {
                        GroupId,
                        chMapName}, this.MapSubsGroupToChannelMapOperationCompleted, userState);
        }
        
        private void OnMapSubsGroupToChannelMapOperationCompleted(object arg) {
            if ((this.MapSubsGroupToChannelMapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MapSubsGroupToChannelMapCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/SetGlobalSetting", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetGlobalSetting(GlobalSettingKey key, string val) {
            this.Invoke("SetGlobalSetting", new object[] {
                        key,
                        val});
        }
        
        /// <remarks/>
        public void SetGlobalSettingAsync(GlobalSettingKey key, string val) {
            this.SetGlobalSettingAsync(key, val, null);
        }
        
        /// <remarks/>
        public void SetGlobalSettingAsync(GlobalSettingKey key, string val, object userState) {
            if ((this.SetGlobalSettingOperationCompleted == null)) {
                this.SetGlobalSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetGlobalSettingOperationCompleted);
            }
            this.InvokeAsync("SetGlobalSetting", new object[] {
                        key,
                        val}, this.SetGlobalSettingOperationCompleted, userState);
        }
        
        private void OnSetGlobalSettingOperationCompleted(object arg) {
            if ((this.SetGlobalSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetGlobalSettingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Channel/GetGlobalSetting", RequestNamespace="Microsoft.TV2.Oss.Channel", ResponseNamespace="Microsoft.TV2.Oss.Channel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetGlobalSetting(GlobalSettingKey key) {
            object[] results = this.Invoke("GetGlobalSetting", new object[] {
                        key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetGlobalSettingAsync(GlobalSettingKey key) {
            this.GetGlobalSettingAsync(key, null);
        }
        
        /// <remarks/>
        public void GetGlobalSettingAsync(GlobalSettingKey key, object userState) {
            if ((this.GetGlobalSettingOperationCompleted == null)) {
                this.GetGlobalSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGlobalSettingOperationCompleted);
            }
            this.InvokeAsync("GetGlobalSetting", new object[] {
                        key}, this.GetGlobalSettingOperationCompleted, userState);
        }
        
        private void OnGetGlobalSettingOperationCompleted(object arg) {
            if ((this.GetGlobalSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGlobalSettingCompleted(this, new GetGlobalSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18046")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Microsoft.TV2.Oss.Channel")]
    public partial class ChannelMapItem {
        
        private string epgIdField;
        
        private string mapIdField;
        
        private string serviceCollectionIdField;
        
        private string serviceCollectionNameField;
        
        private string servicesField;
        
        private int tunerPositionField;
        
        private string channelGroupField;
        
        /// <remarks/>
        public string EpgId {
            get {
                return this.epgIdField;
            }
            set {
                this.epgIdField = value;
            }
        }
        
        /// <remarks/>
        public string MapId {
            get {
                return this.mapIdField;
            }
            set {
                this.mapIdField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceCollectionId {
            get {
                return this.serviceCollectionIdField;
            }
            set {
                this.serviceCollectionIdField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceCollectionName {
            get {
                return this.serviceCollectionNameField;
            }
            set {
                this.serviceCollectionNameField = value;
            }
        }
        
        /// <remarks/>
        public string Services {
            get {
                return this.servicesField;
            }
            set {
                this.servicesField = value;
            }
        }
        
        /// <remarks/>
        public int TunerPosition {
            get {
                return this.tunerPositionField;
            }
            set {
                this.tunerPositionField = value;
            }
        }
        
        /// <remarks/>
        public string ChannelGroup {
            get {
                return this.channelGroupField;
            }
            set {
                this.channelGroupField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18046")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Microsoft.TV2.Oss.Channel")]
    public partial class SubsGroupChannelMapItem {
        
        private string subscriberGroupIdField;
        
        private string channelMapIdField;
        
        private string subscriberGroupNameField;
        
        private string channelMapNameField;
        
        /// <remarks/>
        public string SubscriberGroupId {
            get {
                return this.subscriberGroupIdField;
            }
            set {
                this.subscriberGroupIdField = value;
            }
        }
        
        /// <remarks/>
        public string ChannelMapId {
            get {
                return this.channelMapIdField;
            }
            set {
                this.channelMapIdField = value;
            }
        }
        
        /// <remarks/>
        public string SubscriberGroupName {
            get {
                return this.subscriberGroupNameField;
            }
            set {
                this.subscriberGroupNameField = value;
            }
        }
        
        /// <remarks/>
        public string ChannelMapName {
            get {
                return this.channelMapNameField;
            }
            set {
                this.channelMapNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18046")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Microsoft.TV2.Oss.Channel")]
    public partial class ServiceData {
        
        private ServiceItem[] liveServicesField;
        
        private ServiceItem[] mPEG2ServicesField;
        
        private ServiceItem[] rDPServicesField;
        
        private ServiceItem[] vODServicesField;
        
        private ServiceItem[] uRLServicesField;
        
        private ServiceItem[] dVBTServicesField;
        
        private ServiceItem[] genericServicesField;
        
        /// <remarks/>
        public ServiceItem[] LiveServices {
            get {
                return this.liveServicesField;
            }
            set {
                this.liveServicesField = value;
            }
        }
        
        /// <remarks/>
        public ServiceItem[] MPEG2Services {
            get {
                return this.mPEG2ServicesField;
            }
            set {
                this.mPEG2ServicesField = value;
            }
        }
        
        /// <remarks/>
        public ServiceItem[] RDPServices {
            get {
                return this.rDPServicesField;
            }
            set {
                this.rDPServicesField = value;
            }
        }
        
        /// <remarks/>
        public ServiceItem[] VODServices {
            get {
                return this.vODServicesField;
            }
            set {
                this.vODServicesField = value;
            }
        }
        
        /// <remarks/>
        public ServiceItem[] URLServices {
            get {
                return this.uRLServicesField;
            }
            set {
                this.uRLServicesField = value;
            }
        }
        
        /// <remarks/>
        public ServiceItem[] DVBTServices {
            get {
                return this.dVBTServicesField;
            }
            set {
                this.dVBTServicesField = value;
            }
        }
        
        /// <remarks/>
        public ServiceItem[] GenericServices {
            get {
                return this.genericServicesField;
            }
            set {
                this.genericServicesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18046")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Microsoft.TV2.Oss.Channel")]
    public partial class ServiceItem {
        
        private ServiceHint hintField;
        
        private string subSystemDataField;
        
        private string idField;
        
        private Intent intentField;
        
        private int serviceOrderField;
        
        private string nameField;
        
        private string subSystemField;
        
        /// <remarks/>
        public ServiceHint Hint {
            get {
                return this.hintField;
            }
            set {
                this.hintField = value;
            }
        }
        
        /// <remarks/>
        public string SubSystemData {
            get {
                return this.subSystemDataField;
            }
            set {
                this.subSystemDataField = value;
            }
        }
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public Intent Intent {
            get {
                return this.intentField;
            }
            set {
                this.intentField = value;
            }
        }
        
        /// <remarks/>
        public int ServiceOrder {
            get {
                return this.serviceOrderField;
            }
            set {
                this.serviceOrderField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string SubSystem {
            get {
                return this.subSystemField;
            }
            set {
                this.subSystemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18046")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Microsoft.TV2.SI")]
    public enum ServiceHint {
        
        /// <remarks/>
        FULLSCREEN,
        
        /// <remarks/>
        PIP,
        
        /// <remarks/>
        GENERIC,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18046")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Microsoft.TV2.SI")]
    public enum Intent {
        
        /// <remarks/>
        FULLSCREEN_PRIMARY,
        
        /// <remarks/>
        PIP_PRIMARY,
        
        /// <remarks/>
        FULLSCREEN_SECONDARY,
        
        /// <remarks/>
        PIP_SECONDARY,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18046")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Microsoft.TV2.Oss.Channel")]
    public partial class CallLetterItem2 {
        
        private string callLetterField;
        
        private EntityId stationIdField;
        
        /// <remarks/>
        public string CallLetter {
            get {
                return this.callLetterField;
            }
            set {
                this.callLetterField = value;
            }
        }
        
        /// <remarks/>
        public EntityId StationId {
            get {
                return this.stationIdField;
            }
            set {
                this.stationIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18046")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Microsoft.TV2.Oss.Channel")]
    public partial class EntityId {
        
        private string nativeIdScopeField;
        
        private string nativeIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string NativeIdScope {
            get {
                return this.nativeIdScopeField;
            }
            set {
                this.nativeIdScopeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string NativeId {
            get {
                return this.nativeIdField;
            }
            set {
                this.nativeIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18046")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Microsoft.TV2.Oss.Channel")]
    public partial class CallLetterItem {
        
        private string callLetterField;
        
        private string epgIdField;
        
        /// <remarks/>
        public string CallLetter {
            get {
                return this.callLetterField;
            }
            set {
                this.callLetterField = value;
            }
        }
        
        /// <remarks/>
        public string EpgId {
            get {
                return this.epgIdField;
            }
            set {
                this.epgIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18046")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Microsoft.TV2.Oss.Channel")]
    public partial class ListingsChannelItem2 {
        
        private string callLetterField;
        
        private string epgIdField;
        
        private string dvbTripletsField;
        
        private EntityId stationIdField;
        
        private string descriptionField;
        
        private string progTypeField;
        
        private string sourceTypeField;
        
        private System.Xml.XmlElement[] extensionField;
        
        /// <remarks/>
        public string CallLetter {
            get {
                return this.callLetterField;
            }
            set {
                this.callLetterField = value;
            }
        }
        
        /// <remarks/>
        public string EpgId {
            get {
                return this.epgIdField;
            }
            set {
                this.epgIdField = value;
            }
        }
        
        /// <remarks/>
        public string DvbTriplets {
            get {
                return this.dvbTripletsField;
            }
            set {
                this.dvbTripletsField = value;
            }
        }
        
        /// <remarks/>
        public EntityId StationId {
            get {
                return this.stationIdField;
            }
            set {
                this.stationIdField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string ProgType {
            get {
                return this.progTypeField;
            }
            set {
                this.progTypeField = value;
            }
        }
        
        /// <remarks/>
        public string SourceType {
            get {
                return this.sourceTypeField;
            }
            set {
                this.sourceTypeField = value;
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlElement[] Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18046")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Microsoft.TV2.Oss.Channel")]
    public partial class ListingsChannelItem {
        
        private string callLetterField;
        
        private string epgIdField;
        
        private string nativeIdField;
        
        private string dvbTripletsField;
        
        private string descriptionField;
        
        private string progTypeField;
        
        private string sourceTypeField;
        
        private System.Xml.XmlElement[] extensionField;
        
        /// <remarks/>
        public string CallLetter {
            get {
                return this.callLetterField;
            }
            set {
                this.callLetterField = value;
            }
        }
        
        /// <remarks/>
        public string EpgId {
            get {
                return this.epgIdField;
            }
            set {
                this.epgIdField = value;
            }
        }
        
        /// <remarks/>
        public string NativeId {
            get {
                return this.nativeIdField;
            }
            set {
                this.nativeIdField = value;
            }
        }
        
        /// <remarks/>
        public string DvbTriplets {
            get {
                return this.dvbTripletsField;
            }
            set {
                this.dvbTripletsField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string ProgType {
            get {
                return this.progTypeField;
            }
            set {
                this.progTypeField = value;
            }
        }
        
        /// <remarks/>
        public string SourceType {
            get {
                return this.sourceTypeField;
            }
            set {
                this.sourceTypeField = value;
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlElement[] Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18046")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Microsoft.TV2.Oss.Channel")]
    public partial class MediaDescriptionItem2 {
        
        private string callLetterField;
        
        private EntityId stationIdField;
        
        private string idField;
        
        private string serviceCollectionIdField;
        
        private string serviceCollectionNameField;
        
        private bool disableDvrSkipField;
        
        private ServiceItem[] servicesField;
        
        private string servicesStringField;
        
        /// <remarks/>
        public string CallLetter {
            get {
                return this.callLetterField;
            }
            set {
                this.callLetterField = value;
            }
        }
        
        /// <remarks/>
        public EntityId StationId {
            get {
                return this.stationIdField;
            }
            set {
                this.stationIdField = value;
            }
        }
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceCollectionId {
            get {
                return this.serviceCollectionIdField;
            }
            set {
                this.serviceCollectionIdField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceCollectionName {
            get {
                return this.serviceCollectionNameField;
            }
            set {
                this.serviceCollectionNameField = value;
            }
        }
        
        /// <remarks/>
        public bool DisableDvrSkip {
            get {
                return this.disableDvrSkipField;
            }
            set {
                this.disableDvrSkipField = value;
            }
        }
        
        /// <remarks/>
        public ServiceItem[] Services {
            get {
                return this.servicesField;
            }
            set {
                this.servicesField = value;
            }
        }
        
        /// <remarks/>
        public string ServicesString {
            get {
                return this.servicesStringField;
            }
            set {
                this.servicesStringField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18046")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Microsoft.TV2.Oss.Channel")]
    public partial class MediaDescriptionItem {
        
        private string callLetterField;
        
        private string epgIdField;
        
        private string idField;
        
        private string serviceCollectionIdField;
        
        private string serviceCollectionNameField;
        
        private bool disableDvrSkipField;
        
        private ServiceItem[] servicesField;
        
        private string servicesStringField;
        
        /// <remarks/>
        public string CallLetter {
            get {
                return this.callLetterField;
            }
            set {
                this.callLetterField = value;
            }
        }
        
        /// <remarks/>
        public string EpgId {
            get {
                return this.epgIdField;
            }
            set {
                this.epgIdField = value;
            }
        }
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceCollectionId {
            get {
                return this.serviceCollectionIdField;
            }
            set {
                this.serviceCollectionIdField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceCollectionName {
            get {
                return this.serviceCollectionNameField;
            }
            set {
                this.serviceCollectionNameField = value;
            }
        }
        
        /// <remarks/>
        public bool DisableDvrSkip {
            get {
                return this.disableDvrSkipField;
            }
            set {
                this.disableDvrSkipField = value;
            }
        }
        
        /// <remarks/>
        public ServiceItem[] Services {
            get {
                return this.servicesField;
            }
            set {
                this.servicesField = value;
            }
        }
        
        /// <remarks/>
        public string ServicesString {
            get {
                return this.servicesStringField;
            }
            set {
                this.servicesStringField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18046")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Microsoft.TV2.Oss.Channel")]
    public partial class ChannelMapItem2 {
        
        private EntityId stationIdField;
        
        private string mapIdField;
        
        private string serviceCollectionIdField;
        
        private string serviceCollectionNameField;
        
        private string servicesField;
        
        private int tunerPositionField;
        
        private string channelGroupField;
        
        /// <remarks/>
        public EntityId StationId {
            get {
                return this.stationIdField;
            }
            set {
                this.stationIdField = value;
            }
        }
        
        /// <remarks/>
        public string MapId {
            get {
                return this.mapIdField;
            }
            set {
                this.mapIdField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceCollectionId {
            get {
                return this.serviceCollectionIdField;
            }
            set {
                this.serviceCollectionIdField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceCollectionName {
            get {
                return this.serviceCollectionNameField;
            }
            set {
                this.serviceCollectionNameField = value;
            }
        }
        
        /// <remarks/>
        public string Services {
            get {
                return this.servicesField;
            }
            set {
                this.servicesField = value;
            }
        }
        
        /// <remarks/>
        public int TunerPosition {
            get {
                return this.tunerPositionField;
            }
            set {
                this.tunerPositionField = value;
            }
        }
        
        /// <remarks/>
        public string ChannelGroup {
            get {
                return this.channelGroupField;
            }
            set {
                this.channelGroupField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18046")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Microsoft.TV2.Oss.Channel")]
    public enum GlobalSettingKey {
        
        /// <remarks/>
        PauseBufferLength,
        
        /// <remarks/>
        PConUnlockPeriodInMinutes,
        
        /// <remarks/>
        AdultUnlockPeriodInMinutes,
        
        /// <remarks/>
        AllowChannelReordering,
        
        /// <remarks/>
        AppKeyURL1,
        
        /// <remarks/>
        AppKeyURL2,
        
        /// <remarks/>
        AppKeyURL3,
        
        /// <remarks/>
        AppKeyURL4,
        
        /// <remarks/>
        AppKeyURL5,
        
        /// <remarks/>
        AppKeyURL6,
        
        /// <remarks/>
        AppHelpURL,
        
        /// <remarks/>
        ScreenSaverTimeoutMinutes,
        
        /// <remarks/>
        RelockOnChannelChange,
        
        /// <remarks/>
        AdultRatingLocked,
        
        /// <remarks/>
        EventQueueSize,
        
        /// <remarks/>
        TuneEvtLogSeconds,
        
        /// <remarks/>
        EventUploadHours,
        
        /// <remarks/>
        EnabledPinTypes,
        
        /// <remarks/>
        ClientMenus,
        
        /// <remarks/>
        CustomStrings,
        
        /// <remarks/>
        CreditLimitChangeApp,
        
        /// <remarks/>
        PinRetryLimit,
        
        /// <remarks/>
        PinRetryTimeoutMinutes,
        
        /// <remarks/>
        AdultPinRetryLimit,
        
        /// <remarks/>
        AdultPinRetryTimeoutMinutes,
        
        /// <remarks/>
        PurchasePinRetryLimit,
        
        /// <remarks/>
        PurchasePinRetryTimeoutMinutes,
        
        /// <remarks/>
        DisableICC,
        
        /// <remarks/>
        DisabledEventIds,
        
        /// <remarks/>
        HDStreams,
        
        /// <remarks/>
        SDStreams,
        
        /// <remarks/>
        DVREnabled,
        
        /// <remarks/>
        TimeZone,
        
        /// <remarks/>
        DetuneTimeoutHours,
        
        /// <remarks/>
        RequirePinToRecordBlockedShows,
        
        /// <remarks/>
        CGMSA_CopyFreely_Buffering,
        
        /// <remarks/>
        CGMSA_CopyFreely_Recording,
        
        /// <remarks/>
        CGMSA_CopyOnce_Buffering,
        
        /// <remarks/>
        CGMSA_CopyOnce_Recording,
        
        /// <remarks/>
        CGMSA_CopyNever_Buffering,
        
        /// <remarks/>
        CGMSA_CopyNever_Recording,
        
        /// <remarks/>
        DvrSkip,
        
        /// <remarks/>
        ParentalControlState,
        
        /// <remarks/>
        HideNoRightsChannels,
        
        /// <remarks/>
        DRMBlackoutNotificationInterval,
        
        /// <remarks/>
        NonDRMBlackoutNotificationInterval,
        
        /// <remarks/>
        EITCountryCode,
        
        /// <remarks/>
        EITRatingSystem,
        
        /// <remarks/>
        EITRatingSystem_Name,
        
        /// <remarks/>
        UseMappedServerChannelsOnly,
        
        /// <remarks/>
        ServerChannelsMappedFirst,
        
        /// <remarks/>
        CreditLimitCheckEnabled,
        
        /// <remarks/>
        ExpiredDServerSeconds,
        
        /// <remarks/>
        ExposedUserStoreKeys,
        
        /// <remarks/>
        AllowNegativeOfferPrice,
        
        /// <remarks/>
        ExternalPurchaseURL,
        
        /// <remarks/>
        EnableEPGPhase2Guide,
        
        /// <remarks/>
        GuideIISDownloadBlockSize,
        
        /// <remarks/>
        GuideIISDownloadSleepTimeMS,
        
        /// <remarks/>
        GuideEnableServerPolling,
        
        /// <remarks/>
        GuideCurrentWindowMinimumHours,
        
        /// <remarks/>
        GuideFutureWindowMinimumHours,
        
        /// <remarks/>
        GuideBrowseBarMinimumHours,
        
        /// <remarks/>
        GuideMinimumRequiredListingsHours,
        
        /// <remarks/>
        GuideUpdateSpreadSeconds,
        
        /// <remarks/>
        GuideDataStoreMaxSize,
        
        /// <remarks/>
        GuideDataStoreFileCount,
        
        /// <remarks/>
        GuideDataStoreFileMinimumSize,
        
        /// <remarks/>
        GuideDataStoreName,
        
        /// <remarks/>
        GuideNumFutureWindows,
        
        /// <remarks/>
        GuideNumFutureWindows_Channel,
        
        /// <remarks/>
        GuideStationsPerRequest_Current,
        
        /// <remarks/>
        GuideStationsPerRequest_Future,
        
        /// <remarks/>
        GuideStationsPerRequest_MD,
        
        /// <remarks/>
        GuideWindowSizeHours_Current,
        
        /// <remarks/>
        GuideWindowSizeHours_Future,
        
        /// <remarks/>
        GuideFailureRetryStartSeconds,
        
        /// <remarks/>
        GuideFailureRetrySpanSeconds,
        
        /// <remarks/>
        GuideDisplayReserve,
        
        /// <remarks/>
        SecondsToBlockDescriptionRequests,
        
        /// <remarks/>
        BackwardGridGuideHours,
        
        /// <remarks/>
        PastListingsDataDurationInHours,
        
        /// <remarks/>
        MaxListingsDataDurationInHours,
        
        /// <remarks/>
        VodBlockSizeKB,
        
        /// <remarks/>
        VodMaxReadSizeKB,
        
        /// <remarks/>
        VodInitialMinDataRateKbs,
        
        /// <remarks/>
        VodMaxSessionCount,
        
        /// <remarks/>
        WebProxyConfiguration,
        
        /// <remarks/>
        NavigationTargetMappingFile,
        
        /// <remarks/>
        CU_RequestsPerSecond,
        
        /// <remarks/>
        CU_Schedule,
        
        /// <remarks/>
        CU_UpgradeOperationFlag,
        
        /// <remarks/>
        ActiveUniverse,
        
        /// <remarks/>
        ActivityLoggingEnabled,
        
        /// <remarks/>
        AlertToneDuration,
        
        /// <remarks/>
        AvailableUniverses,
        
        /// <remarks/>
        CanDetuneOnAlert,
        
        /// <remarks/>
        DvrNotificationDelay,
        
        /// <remarks/>
        EnableSeriesPriority,
        
        /// <remarks/>
        EAS911MediaDescriptor,
        
        /// <remarks/>
        EgressProfile,
        
        /// <remarks/>
        IndividualDCT,
        
        /// <remarks/>
        IndividualFloor,
        
        /// <remarks/>
        IndividualFudge,
        
        /// <remarks/>
        IndividualFuzz,
        
        /// <remarks/>
        IndividualMCT,
        
        /// <remarks/>
        IngressProfile,
        
        /// <remarks/>
        LastVolume,
        
        /// <remarks/>
        LiveServiceOverrideDefault,
        
        /// <remarks/>
        LiveServicesEnabled,
        
        /// <remarks/>
        PremiumServiceOverride,
        
        /// <remarks/>
        ShowAlertConfirmDialog,
        
        /// <remarks/>
        SslIntermediateCerts,
        
        /// <remarks/>
        SslKeyPairAndCert,
        
        /// <remarks/>
        SslTrustedRootCerts,
        
        /// <remarks/>
        UniverseDefinition,
        
        /// <remarks/>
        PFStoreFront,
        
        /// <remarks/>
        MapFeatures,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateChannelMapCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateChannelMap2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateMediaDescriptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateMediaDescription2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetDefaultChannelMapCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteChannelMapCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteMediaDescriptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetListingsChannelsCompletedEventHandler(object sender, GetListingsChannelsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListingsChannelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListingsChannelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ListingsChannelItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ListingsChannelItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetListingsChannels2CompletedEventHandler(object sender, GetListingsChannels2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListingsChannels2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListingsChannels2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ListingsChannelItem2[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ListingsChannelItem2[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLiveCallLettersCompletedEventHandler(object sender, GetLiveCallLettersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLiveCallLettersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLiveCallLettersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CallLetterItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallLetterItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLiveCallLetters2CompletedEventHandler(object sender, GetLiveCallLetters2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLiveCallLetters2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLiveCallLetters2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CallLetterItem2[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallLetterItem2[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCallLettersCompletedEventHandler(object sender, GetCallLettersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCallLettersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCallLettersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CallLetterItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallLetterItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCallLetters2CompletedEventHandler(object sender, GetCallLetters2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCallLetters2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCallLetters2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CallLetterItem2[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallLetterItem2[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPPVCallLettersCompletedEventHandler(object sender, GetPPVCallLettersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPPVCallLettersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPPVCallLettersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CallLetterItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallLetterItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPPVCallLetters2CompletedEventHandler(object sender, GetPPVCallLetters2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPPVCallLetters2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPPVCallLetters2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CallLetterItem2[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallLetterItem2[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetChannelMapsCompletedEventHandler(object sender, GetChannelMapsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChannelMapsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChannelMapsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetChannelsCompletedEventHandler(object sender, GetChannelsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChannelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChannelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChannelMapItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChannelMapItem[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool isDefault {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetChannels2CompletedEventHandler(object sender, GetChannels2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChannels2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChannels2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChannelMapItem2[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChannelMapItem2[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool isDefault {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllMediaDescriptionsCompletedEventHandler(object sender, GetAllMediaDescriptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMediaDescriptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMediaDescriptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaDescriptionItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaDescriptionItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllMediaDescriptions2CompletedEventHandler(object sender, GetAllMediaDescriptions2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMediaDescriptions2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMediaDescriptions2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaDescriptionItem2[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaDescriptionItem2[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetNonPPVMediaDescriptionsCompletedEventHandler(object sender, GetNonPPVMediaDescriptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNonPPVMediaDescriptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNonPPVMediaDescriptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaDescriptionItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaDescriptionItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetNonPPVMediaDescriptions2CompletedEventHandler(object sender, GetNonPPVMediaDescriptions2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNonPPVMediaDescriptions2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNonPPVMediaDescriptions2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaDescriptionItem2[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaDescriptionItem2[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPPVMediaDescriptionsCompletedEventHandler(object sender, GetPPVMediaDescriptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPPVMediaDescriptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPPVMediaDescriptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaDescriptionItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaDescriptionItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPPVMediaDescriptions2CompletedEventHandler(object sender, GetPPVMediaDescriptions2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPPVMediaDescriptions2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPPVMediaDescriptions2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaDescriptionItem2[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaDescriptionItem2[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediaDescriptionCompletedEventHandler(object sender, GetMediaDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediaDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediaDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaDescriptionItem Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaDescriptionItem)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediaDescription2CompletedEventHandler(object sender, GetMediaDescription2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediaDescription2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediaDescription2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaDescriptionItem2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaDescriptionItem2)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetServicesCompletedEventHandler(object sender, GetServicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetServiceCompletedEventHandler(object sender, GetServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceItem Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceItem)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LookupMediaDescReferencesCompletedEventHandler(object sender, LookupMediaDescReferencesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LookupMediaDescReferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LookupMediaDescReferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateChannelMapCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateChannelMap2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateMediaDescriptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateMediaDescription2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSubsGrpChannelMapsCompletedEventHandler(object sender, GetSubsGrpChannelMapsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubsGrpChannelMapsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubsGrpChannelMapsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SubsGroupChannelMapItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SubsGroupChannelMapItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void MapSubsGroupToChannelMapCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetGlobalSettingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGlobalSettingCompletedEventHandler(object sender, GetGlobalSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGlobalSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGlobalSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591