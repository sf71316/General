//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.17929
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 原始程式碼已由 Microsoft.VSDesigner 自動產生，版本 4.0.30319.17929。
// 
#pragma warning disable 1591

namespace General.Service.OssUINotifications {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UINotificationsWSSoap", Namespace="http://tempuri.org/")]
    public partial class UINotificationsWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendMessageToAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback BroadcastMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback BroadcastMessageToGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMessageToDevicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback LaunchClientApplicationOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public UINotificationsWS() {
            this.Url = global::General.Service.Properties.Settings.Default.General_Service_OssUINotifications_UINotificationsWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendMessageToAccountCompletedEventHandler SendMessageToAccountCompleted;
        
        /// <remarks/>
        public event BroadcastMessageCompletedEventHandler BroadcastMessageCompleted;
        
        /// <remarks/>
        public event BroadcastMessageToGroupsCompletedEventHandler BroadcastMessageToGroupsCompleted;
        
        /// <remarks/>
        public event SendMessageToDevicesCompletedEventHandler SendMessageToDevicesCompleted;
        
        /// <remarks/>
        public event LaunchClientApplicationCompletedEventHandler LaunchClientApplicationCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMessageToAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendMessageToAccount(string nativeId, System.DateTime deliveryTime, System.DateTime expirationTime, string notificationData) {
            this.Invoke("SendMessageToAccount", new object[] {
                        nativeId,
                        deliveryTime,
                        expirationTime,
                        notificationData});
        }
        
        /// <remarks/>
        public void SendMessageToAccountAsync(string nativeId, System.DateTime deliveryTime, System.DateTime expirationTime, string notificationData) {
            this.SendMessageToAccountAsync(nativeId, deliveryTime, expirationTime, notificationData, null);
        }
        
        /// <remarks/>
        public void SendMessageToAccountAsync(string nativeId, System.DateTime deliveryTime, System.DateTime expirationTime, string notificationData, object userState) {
            if ((this.SendMessageToAccountOperationCompleted == null)) {
                this.SendMessageToAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMessageToAccountOperationCompleted);
            }
            this.InvokeAsync("SendMessageToAccount", new object[] {
                        nativeId,
                        deliveryTime,
                        expirationTime,
                        notificationData}, this.SendMessageToAccountOperationCompleted, userState);
        }
        
        private void OnSendMessageToAccountOperationCompleted(object arg) {
            if ((this.SendMessageToAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMessageToAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BroadcastMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BroadcastMessage(string notificationData, System.DateTime deliveryTime, System.DateTime expirationTime) {
            this.Invoke("BroadcastMessage", new object[] {
                        notificationData,
                        deliveryTime,
                        expirationTime});
        }
        
        /// <remarks/>
        public void BroadcastMessageAsync(string notificationData, System.DateTime deliveryTime, System.DateTime expirationTime) {
            this.BroadcastMessageAsync(notificationData, deliveryTime, expirationTime, null);
        }
        
        /// <remarks/>
        public void BroadcastMessageAsync(string notificationData, System.DateTime deliveryTime, System.DateTime expirationTime, object userState) {
            if ((this.BroadcastMessageOperationCompleted == null)) {
                this.BroadcastMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBroadcastMessageOperationCompleted);
            }
            this.InvokeAsync("BroadcastMessage", new object[] {
                        notificationData,
                        deliveryTime,
                        expirationTime}, this.BroadcastMessageOperationCompleted, userState);
        }
        
        private void OnBroadcastMessageOperationCompleted(object arg) {
            if ((this.BroadcastMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BroadcastMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BroadcastMessageToGroups", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BroadcastMessageToGroups(string notificationData, System.DateTime deliveryTime, System.DateTime expirationTime, string[] grpExternalIds) {
            this.Invoke("BroadcastMessageToGroups", new object[] {
                        notificationData,
                        deliveryTime,
                        expirationTime,
                        grpExternalIds});
        }
        
        /// <remarks/>
        public void BroadcastMessageToGroupsAsync(string notificationData, System.DateTime deliveryTime, System.DateTime expirationTime, string[] grpExternalIds) {
            this.BroadcastMessageToGroupsAsync(notificationData, deliveryTime, expirationTime, grpExternalIds, null);
        }
        
        /// <remarks/>
        public void BroadcastMessageToGroupsAsync(string notificationData, System.DateTime deliveryTime, System.DateTime expirationTime, string[] grpExternalIds, object userState) {
            if ((this.BroadcastMessageToGroupsOperationCompleted == null)) {
                this.BroadcastMessageToGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBroadcastMessageToGroupsOperationCompleted);
            }
            this.InvokeAsync("BroadcastMessageToGroups", new object[] {
                        notificationData,
                        deliveryTime,
                        expirationTime,
                        grpExternalIds}, this.BroadcastMessageToGroupsOperationCompleted, userState);
        }
        
        private void OnBroadcastMessageToGroupsOperationCompleted(object arg) {
            if ((this.BroadcastMessageToGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BroadcastMessageToGroupsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMessageToDevices", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendMessageToDevices(System.Guid[] devices, System.DateTime deliveryTime, System.DateTime expirationTime, string notificationData) {
            this.Invoke("SendMessageToDevices", new object[] {
                        devices,
                        deliveryTime,
                        expirationTime,
                        notificationData});
        }
        
        /// <remarks/>
        public void SendMessageToDevicesAsync(System.Guid[] devices, System.DateTime deliveryTime, System.DateTime expirationTime, string notificationData) {
            this.SendMessageToDevicesAsync(devices, deliveryTime, expirationTime, notificationData, null);
        }
        
        /// <remarks/>
        public void SendMessageToDevicesAsync(System.Guid[] devices, System.DateTime deliveryTime, System.DateTime expirationTime, string notificationData, object userState) {
            if ((this.SendMessageToDevicesOperationCompleted == null)) {
                this.SendMessageToDevicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMessageToDevicesOperationCompleted);
            }
            this.InvokeAsync("SendMessageToDevices", new object[] {
                        devices,
                        deliveryTime,
                        expirationTime,
                        notificationData}, this.SendMessageToDevicesOperationCompleted, userState);
        }
        
        private void OnSendMessageToDevicesOperationCompleted(object arg) {
            if ((this.SendMessageToDevicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMessageToDevicesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LaunchClientApplication", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LaunchClientApplication(ExternalId externalId, string applicationUri) {
            this.Invoke("LaunchClientApplication", new object[] {
                        externalId,
                        applicationUri});
        }
        
        /// <remarks/>
        public void LaunchClientApplicationAsync(ExternalId externalId, string applicationUri) {
            this.LaunchClientApplicationAsync(externalId, applicationUri, null);
        }
        
        /// <remarks/>
        public void LaunchClientApplicationAsync(ExternalId externalId, string applicationUri, object userState) {
            if ((this.LaunchClientApplicationOperationCompleted == null)) {
                this.LaunchClientApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLaunchClientApplicationOperationCompleted);
            }
            this.InvokeAsync("LaunchClientApplication", new object[] {
                        externalId,
                        applicationUri}, this.LaunchClientApplicationOperationCompleted, userState);
        }
        
        private void OnLaunchClientApplicationOperationCompleted(object arg) {
            if ((this.LaunchClientApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LaunchClientApplicationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StringExternalId))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DeviceExternalId))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class ExternalId {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DeviceExternalId))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class StringExternalId : ExternalId {
        
        private string idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DeviceExternalId : StringExternalId {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendMessageToAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BroadcastMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BroadcastMessageToGroupsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendMessageToDevicesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LaunchClientApplicationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591